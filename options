# paths
resultDirectory = ./results/
translationsCacheDirectory = ../../translations
translateRelaxedCommand = ../translate/translate-relaxed.py

# The seed mainly influences what operator is branched over.
# Warning: in some c++ libraries the seeds 0 and 1 do the same thing
randomSeed                       = 3

# search type (IDA* or branch and bound)
idaStarSearch                    = false

# change to true for domains with 0-cost operators (doesn't hurt much in other domains, so could also always be true)
autoApplyZeroCostOperators       = false

# initial bound with h^lst (local Steiner Tree improvement) (usefull for branch and bound search, no use for IDA*)
initialUpperBound                = true

# Steiner Tree improvement for all plans found during the search (usefull for branch and bound search, no use for IDA*)
improveIntermediatePlans         = true

# can turn search non-incremental for comparison with Fast Downward
incrementalSearch                = true



# Options for experimental purposes
# (do not change these values unless you know what you are doing)
dontUseHeuristic = false
restartTime = 0
geometricallyIncreasedRestartTime = false
universalRestartStrategy          = false
selectOperatorInSmallestLandmark  = true
avoidExpandingSecondSuccessor     = true
autoApplyUnitLandmarks            = false
preferOperatorsFromCurrentPlan    = false
tryGoalOnZeroHeuristic            = false
breakOnFirstSolution              = false
expansionLimit                    = 1
